import countries from "../assets/data/countries.json";

// Optional: define a type for clarity
type Country = {
  countryCode: string;
  countryName: string;
  continent: string;
  difficulty: number;
};

// 1. Filter countries with difficulty 2
const difficulty2Countries = countries.filter(
  (c: Country) => c.difficulty === 2
);

// 2. Shuffle them randomly
const shuffled = difficulty2Countries.sort(() => Math.random() - 0.5);

// 3. Get the first 10
const random10 = shuffled.slice(0, 10);

        {/* <Text style={styles.title} numberOfLines={2} adjustsFontSizeToFit>
          {title}
        </Text>
        <Text style={styles.description} numberOfLines={3}>
          {description}
        </Text>
        <ProgressBar progress={0.5} color="blue" style={styles.progressBar} /> */}


TODO:

Determine if declarations.d.ts and metro.config.js are required, and if SVGs will be used

      // const updatedProgression: ProgressionStructure = {
      //   ...userProgression,
      //   games: {
      //     ...userProgression.games,
      //     [screenInformation.gameMode!]: {
      //       ...userProgression.games[screenInformation.gameMode!],
      //       [LEVEL_MAP[difficulty]]: {
      //         ...userProgression.games[screenInformation.gameMode!][
      //           LEVEL_MAP[difficulty]
      //         ],
      //         isCompleted: true,
      //         userScore: Math.max(progression.userScore, resultPercentage),
      //       },
      //       ...(userNextLevel &&
      //         isAdvancementRequirementMet && {
      //           [userNextLevel]: {
      //             ...userProgression.games[screenInformation.gameMode!][
      //               userNextLevel
      //             ],
      //             isLocked: false,
      //           },
      //         }),
      //     },
      //   },
      // };